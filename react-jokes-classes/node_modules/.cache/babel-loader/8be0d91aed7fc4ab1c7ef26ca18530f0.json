{"ast":null,"code":"var _jsxFileName = \"/root/coding/react-jokes-classes/src/JokeList.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Joke from './Joke';\nimport './JokeList.css';\n\nclass JokeList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: []\n    };\n    this.generateNewJokes = this.generateNewJokes.bind(this);\n    this.resetVotes = this.resetVotes.bind(this);\n    this.toggleLock = this.toggleLock.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n  /* at mount, get jokes */\n\n\n  componentDidMount() {\n    if (this.state.jokes.length < this.props.numJokesToGet) this.getJokes();\n  }\n\n  componentDidUpdate() {\n    if (this.state.jokes.length < this.props.numJokesToGet) this.getJokes();\n  }\n  /* retrieve jokes from API */\n\n\n  async getJokes() {\n    try {\n      // load jokes one at a time, adding not-yet-seen jokes\n      let jokes = this.state.jokes;\n      let jokeVotes = JSON.parse(window.localStorage.getItem('jokeVotes') || '{}');\n      let seenJokes = new Set(jokes.map(j => j.id));\n\n      while (jokes.length < this.props.numJokesToGet) {\n        let res = await axios.get('https://icanhazdadjoke.com', {\n          headers: {\n            Accept: 'application/json'\n          }\n        });\n        let {\n          status,\n          ...joke\n        } = res.data;\n\n        if (!seenJokes.has(joke.id)) {\n          seenJokes.add(joke.id);\n          jokeVotes[joke.id] = jokeVotes[joke.id] || 0;\n          jokes.push({ ...joke,\n            votes: jokeVotes[joke.id],\n            locked: false\n          });\n        } else {\n          console.log('duplicate found!');\n        }\n      }\n\n      this.setState({\n        jokes\n      });\n      window.localStorage.setItem('jokeVotes', JSON.stringify(jokeVotes));\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  /* empty joke list, set to loading state, and then call getJokes */\n\n\n  generateNewJokes() {\n    this.setState(st => ({\n      jokes: st.jokes.filter(j => j.locked)\n    }));\n  }\n\n  resetVotes() {\n    window.localStorage.setItem('jokeVotes', '{}');\n    this.setState(st => ({\n      jokes: st.jokes.map(joke => ({ ...joke,\n        votes: 0\n      }))\n    }));\n  }\n  /* change vote for this id by delta (+1 or -1) */\n\n\n  vote(id, delta) {\n    let jokeVotes = JSON.parse(window.localStorage.getItem('jokeVotes'));\n    jokeVotes[id] = (jokeVotes[id] || 0) + delta;\n    window.localStorage.setItem('jokeVotes', JSON.stringify(jokeVotes));\n    this.setState(st => ({\n      jokes: st.jokes.map(j => j.id === id ? { ...j,\n        votes: j.votes + delta\n      } : j)\n    }));\n  }\n\n  toggleLock(id) {\n    this.setState(st => ({\n      jokes: st.jokes.map(j => j.id === id ? { ...j,\n        locked: !j.locked\n      } : j)\n    }));\n  }\n  /* render: either loading spinner or list of sorted jokes. */\n\n\n  render() {\n    let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n    let allLocked = sortedJokes.filter(j => j.locked).length === this.props.numJokesToGet;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"JokeList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"JokeList-getmore\",\n      onClick: this.generateNewJokes,\n      disabled: allLocked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }\n    }, \"Get New Jokes\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"JokeList-getmore\",\n      onClick: this.resetVotes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }\n    }, \"Reset Vote Counts\"), sortedJokes.map(j => /*#__PURE__*/React.createElement(Joke, {\n      text: j.joke,\n      key: j.id,\n      id: j.id,\n      votes: j.votes,\n      vote: this.vote,\n      locked: j.locked,\n      toggleLock: this.toggleLock,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 6\n      }\n    })), sortedJokes.length < this.props.numJokesToGet ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-4x fa-spinner fa-spin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    })) : null);\n  }\n\n}\n\nJokeList.defaultProps = {\n  numJokesToGet: 10\n};\nexport default JokeList;","map":{"version":3,"sources":["/root/coding/react-jokes-classes/src/JokeList.js"],"names":["React","Component","axios","Joke","JokeList","constructor","props","state","jokes","generateNewJokes","bind","resetVotes","toggleLock","vote","componentDidMount","length","numJokesToGet","getJokes","componentDidUpdate","jokeVotes","JSON","parse","window","localStorage","getItem","seenJokes","Set","map","j","id","res","get","headers","Accept","status","joke","data","has","add","push","votes","locked","console","log","setState","setItem","stringify","e","st","filter","delta","render","sortedJokes","sort","a","b","allLocked","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Joke from './Joke';\nimport './JokeList.css';\n\nclass JokeList extends Component {\n\tstatic defaultProps = {\n\t\tnumJokesToGet: 10,\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tjokes: [],\n\t\t};\n\n\t\tthis.generateNewJokes = this.generateNewJokes.bind(this);\n\t\tthis.resetVotes = this.resetVotes.bind(this);\n\t\tthis.toggleLock = this.toggleLock.bind(this);\n\t\tthis.vote = this.vote.bind(this);\n\t}\n\n\t/* at mount, get jokes */\n\n\tcomponentDidMount() {\n\t\tif (this.state.jokes.length < this.props.numJokesToGet) this.getJokes();\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (this.state.jokes.length < this.props.numJokesToGet) this.getJokes();\n\t}\n\n\t/* retrieve jokes from API */\n\n\tasync getJokes() {\n\t\ttry {\n\t\t\t// load jokes one at a time, adding not-yet-seen jokes\n\t\t\tlet jokes = this.state.jokes;\n\t\t\tlet jokeVotes = JSON.parse(\n\t\t\t\twindow.localStorage.getItem('jokeVotes') || '{}'\n\t\t\t);\n\t\t\tlet seenJokes = new Set(jokes.map((j) => j.id));\n\n\t\t\twhile (jokes.length < this.props.numJokesToGet) {\n\t\t\t\tlet res = await axios.get('https://icanhazdadjoke.com', {\n\t\t\t\t\theaders: { Accept: 'application/json' },\n\t\t\t\t});\n\t\t\t\tlet { status, ...joke } = res.data;\n\n\t\t\t\tif (!seenJokes.has(joke.id)) {\n\t\t\t\t\tseenJokes.add(joke.id);\n\t\t\t\t\tjokeVotes[joke.id] = jokeVotes[joke.id] || 0;\n\t\t\t\t\tjokes.push({\n\t\t\t\t\t\t...joke,\n\t\t\t\t\t\tvotes: jokeVotes[joke.id],\n\t\t\t\t\t\tlocked: false,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('duplicate found!');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.setState({ jokes });\n\t\t\twindow.localStorage.setItem('jokeVotes', JSON.stringify(jokeVotes));\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t}\n\n\t/* empty joke list, set to loading state, and then call getJokes */\n\n\tgenerateNewJokes() {\n\t\tthis.setState((st) => ({ jokes: st.jokes.filter((j) => j.locked) }));\n\t}\n\n\tresetVotes() {\n\t\twindow.localStorage.setItem('jokeVotes', '{}');\n\t\tthis.setState((st) => ({\n\t\t\tjokes: st.jokes.map((joke) => ({ ...joke, votes: 0 })),\n\t\t}));\n\t}\n\n\t/* change vote for this id by delta (+1 or -1) */\n\n\tvote(id, delta) {\n\t\tlet jokeVotes = JSON.parse(window.localStorage.getItem('jokeVotes'));\n\t\tjokeVotes[id] = (jokeVotes[id] || 0) + delta;\n\t\twindow.localStorage.setItem('jokeVotes', JSON.stringify(jokeVotes));\n\t\tthis.setState((st) => ({\n\t\t\tjokes: st.jokes.map((j) =>\n\t\t\t\tj.id === id ? { ...j, votes: j.votes + delta } : j\n\t\t\t),\n\t\t}));\n\t}\n\n\ttoggleLock(id) {\n\t\tthis.setState((st) => ({\n\t\t\tjokes: st.jokes.map((j) =>\n\t\t\t\tj.id === id ? { ...j, locked: !j.locked } : j\n\t\t\t),\n\t\t}));\n\t}\n\n\t/* render: either loading spinner or list of sorted jokes. */\n\n\trender() {\n\t\tlet sortedJokes = [...this.state.jokes].sort(\n\t\t\t(a, b) => b.votes - a.votes\n\t\t);\n\t\tlet allLocked =\n\t\t\tsortedJokes.filter((j) => j.locked).length ===\n\t\t\tthis.props.numJokesToGet;\n\n\t\treturn (\n\t\t\t<div className=\"JokeList\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"JokeList-getmore\"\n\t\t\t\t\tonClick={this.generateNewJokes}\n\t\t\t\t\tdisabled={allLocked}\n\t\t\t\t>\n\t\t\t\t\tGet New Jokes\n\t\t\t\t</button>\n\t\t\t\t<button className=\"JokeList-getmore\" onClick={this.resetVotes}>\n\t\t\t\t\tReset Vote Counts\n\t\t\t\t</button>\n\n\t\t\t\t{sortedJokes.map((j) => (\n\t\t\t\t\t<Joke\n\t\t\t\t\t\ttext={j.joke}\n\t\t\t\t\t\tkey={j.id}\n\t\t\t\t\t\tid={j.id}\n\t\t\t\t\t\tvotes={j.votes}\n\t\t\t\t\t\tvote={this.vote}\n\t\t\t\t\t\tlocked={j.locked}\n\t\t\t\t\t\ttoggleLock={this.toggleLock}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\n\t\t\t\t{sortedJokes.length < this.props.numJokesToGet ? (\n\t\t\t\t\t<div className=\"loading\">\n\t\t\t\t\t\t<i className=\"fas fa-4x fa-spinner fa-spin\" />\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default JokeList;\n"]},"metadata":{},"sourceType":"module"}